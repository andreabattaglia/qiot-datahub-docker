version: '3'
services:

  mosquitto:
    image: eclipse-mosquitto:1.6.2
    container_name: "mosquitto"
    restart: "always"
    networks:
      - datahub
      - qiotconnect
    ports:
    - "1883:1883"
    - "9001:9001"

  kafka:
    image: obsidiandynamics/kafka
    container_name: "kafka"
    restart: "always"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"

  postgresql:
    image: postgres
    container_name: "postgresql"
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres-storage:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "qiot"
      POSTGRES_PASSWORD: "qiot"
      POSTGRES_DB: "qiot"

  postgresqladminer:
    image: adminer
    container_name: "postgresqladminer"
    restart: always
    ports:
      - "18080:8080"
      
  influxdb:
    image: "influxdb:latest"
    container_name: "influxdb"
    ports:
      - "8086:8086"
      - "9999:9999"
    volumes:
      - influxdb-user-storage:/root/.influxdbv2
      - influxdb-data-storage:/var/lib/influxdb2
      - influxdb-config-storage:/etc/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: "setup"
      DOCKER_INFLUXDB_INIT_USERNAME: "qiot"
      DOCKER_INFLUXDB_INIT_PASSWORD: "qiotcovid19password"
      DOCKER_INFLUXDB_INIT_ORG: "qiot"
      DOCKER_INFLUXDB_INIT_BUCKET: "covid19"
#     DOCKER_INFLUXDB_INIT_RETENTION: The duration the system's initial bucket should retain data. If not set, the initial bucket will retain data forever
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: "qiotcovid19influxdbtoken"
      
  grafana:
    image: "grafana/grafana"
    container_name: "grafana"
    links:
      - influxdb
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./volumes/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      GF_SECURITY_ADMIN_USER: "qiot"
      GF_SECURITY_ADMIN_PASSWORD: "qiot"
      
volumes:
  influxdb-user-storage:
  influxdb-data-storage:
  influxdb-config-storage:
  grafana-storage:
  postgres-storage:
networks:
  datahub:
    external: true
  qiotconnect:
    external: true
  default:
    external:
      name: datahub